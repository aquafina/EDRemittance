package model.eo;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 07 10:08:25 PKT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EDRemittanceEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RemittanceHeaderId {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getRemittanceHeaderId();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setRemittanceHeaderId((String)value);
            }
        }
        ,
        Currency {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getCurrency();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setCurrency((String)value);
            }
        }
        ,
        GlDate {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getGlDate();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setGlDate((Date)value);
            }
        }
        ,
        PrcNumber {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getPrcNumber();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setPrcNumber((Number)value);
            }
        }
        ,
        PrcStatus {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getPrcStatus();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setPrcStatus((String)value);
            }
        }
        ,
        Status {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getStatus();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        ReceiptNumber {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getReceiptNumber();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setReceiptNumber((String)value);
            }
        }
        ,
        CustomerId {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getCustomerId();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setCustomerId((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setCreationDate((Timestamp)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setLastUpdateDate((Timestamp)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setLastUpdateLogin((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        ExportCategory {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getExportCategory();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setExportCategory((String)value);
            }
        }
        ,
        ReceiptCategory {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getReceiptCategory();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setReceiptCategory((String)value);
            }
        }
        ,
        ExchangeRate {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getExchangeRate();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setExchangeRate((String)value);
            }
        }
        ,
        ExchangeType {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getExchangeType();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setExchangeType((String)value);
            }
        }
        ,
        RequestId {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getRequestId();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setRequestId((Number)value);
            }
        }
        ,
        BankAccountId {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getBankAccountId();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setBankAccountId((Number)value);
            }
        }
        ,
        ReceiptMethodId {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getReceiptMethodId();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setReceiptMethodId((Number)value);
            }
        }
        ,
        ReceiptStatus {
            public Object get(EDRemittanceEOImpl obj) {
                return obj.getReceiptStatus();
            }

            public void put(EDRemittanceEOImpl obj, Object value) {
                obj.setReceiptStatus((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(EDRemittanceEOImpl object);

        public abstract void put(EDRemittanceEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int REMITTANCEHEADERID = AttributesEnum.RemittanceHeaderId.index();
    public static final int CURRENCY = AttributesEnum.Currency.index();
    public static final int GLDATE = AttributesEnum.GlDate.index();
    public static final int PRCNUMBER = AttributesEnum.PrcNumber.index();
    public static final int PRCSTATUS = AttributesEnum.PrcStatus.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int RECEIPTNUMBER = AttributesEnum.ReceiptNumber.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int EXPORTCATEGORY = AttributesEnum.ExportCategory.index();
    public static final int RECEIPTCATEGORY = AttributesEnum.ReceiptCategory.index();
    public static final int EXCHANGERATE = AttributesEnum.ExchangeRate.index();
    public static final int EXCHANGETYPE = AttributesEnum.ExchangeType.index();
    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int BANKACCOUNTID = AttributesEnum.BankAccountId.index();
    public static final int RECEIPTMETHODID = AttributesEnum.ReceiptMethodId.index();
    public static final int RECEIPTSTATUS = AttributesEnum.ReceiptStatus.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EDRemittanceEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.eo.EDRemittanceEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for RemittanceHeaderId, using the alias name RemittanceHeaderId.
     * @return the RemittanceHeaderId
     */
    public String getRemittanceHeaderId() {
        return (String)getAttributeInternal(REMITTANCEHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RemittanceHeaderId.
     * @param value value to set the RemittanceHeaderId
     */
    public void setRemittanceHeaderId(String value) {
        setAttributeInternal(REMITTANCEHEADERID, value);
    }


    /**
     * Gets the attribute value for Currency, using the alias name Currency.
     * @return the Currency
     */
    public String getCurrency() {
        return (String)getAttributeInternal(CURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Currency.
     * @param value value to set the Currency
     */
    public void setCurrency(String value) {
        setAttributeInternal(CURRENCY, value);
    }

    /**
     * Gets the attribute value for GlDate, using the alias name GlDate.
     * @return the GlDate
     */
    public Date getGlDate() {
        return (Date)getAttributeInternal(GLDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlDate.
     * @param value value to set the GlDate
     */
    public void setGlDate(Date value) {
        setAttributeInternal(GLDATE, value);
    }

    /**
     * Gets the attribute value for PrcNumber, using the alias name PrcNumber.
     * @return the PrcNumber
     */
    public Number getPrcNumber() {
        return (Number)getAttributeInternal(PRCNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrcNumber.
     * @param value value to set the PrcNumber
     */
    public void setPrcNumber(Number value) {
        setAttributeInternal(PRCNUMBER, value);
    }

    /**
     * Gets the attribute value for PrcStatus, using the alias name PrcStatus.
     * @return the PrcStatus
     */
    public String getPrcStatus() {
        return (String)getAttributeInternal(PRCSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrcStatus.
     * @param value value to set the PrcStatus
     */
    public void setPrcStatus(String value) {
        setAttributeInternal(PRCSTATUS, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for ReceiptNumber, using the alias name ReceiptNumber.
     * @return the ReceiptNumber
     */
    public String getReceiptNumber() {
        return (String)getAttributeInternal(RECEIPTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptNumber.
     * @param value value to set the ReceiptNumber
     */
    public void setReceiptNumber(String value) {
        setAttributeInternal(RECEIPTNUMBER, value);
    }

    /**
     * Gets the attribute value for CustomerId, using the alias name CustomerId.
     * @return the CustomerId
     */
    public Number getCustomerId() {
        return (Number)getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerId.
     * @param value value to set the CustomerId
     */
    public void setCustomerId(Number value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for ExportCategory, using the alias name ExportCategory.
     * @return the ExportCategory
     */
    public String getExportCategory() {
        return (String)getAttributeInternal(EXPORTCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExportCategory.
     * @param value value to set the ExportCategory
     */
    public void setExportCategory(String value) {
        setAttributeInternal(EXPORTCATEGORY, value);
    }

    /**
     * Gets the attribute value for ReceiptCategory, using the alias name ReceiptCategory.
     * @return the ReceiptCategory
     */
    public String getReceiptCategory() {
        return (String)getAttributeInternal(RECEIPTCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptCategory.
     * @param value value to set the ReceiptCategory
     */
    public void setReceiptCategory(String value) {
        setAttributeInternal(RECEIPTCATEGORY, value);
    }

    /**
     * Gets the attribute value for ExchangeRate, using the alias name ExchangeRate.
     * @return the ExchangeRate
     */
    public String getExchangeRate() {
        return (String)getAttributeInternal(EXCHANGERATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExchangeRate.
     * @param value value to set the ExchangeRate
     */
    public void setExchangeRate(String value) {
        setAttributeInternal(EXCHANGERATE, value);
    }


    /**
     * Gets the attribute value for ExchangeType, using the alias name ExchangeType.
     * @return the ExchangeType
     */
    public String getExchangeType() {
        return (String)getAttributeInternal(EXCHANGETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExchangeType.
     * @param value value to set the ExchangeType
     */
    public void setExchangeType(String value) {
        setAttributeInternal(EXCHANGETYPE, value);
    }

    /**
     * Gets the attribute value for RequestId, using the alias name RequestId.
     * @return the RequestId
     */
    public Number getRequestId() {
        return (Number)getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestId.
     * @param value value to set the RequestId
     */
    public void setRequestId(Number value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for BankAccountId, using the alias name BankAccountId.
     * @return the BankAccountId
     */
    public Number getBankAccountId() {
        return (Number)getAttributeInternal(BANKACCOUNTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankAccountId.
     * @param value value to set the BankAccountId
     */
    public void setBankAccountId(Number value) {
        setAttributeInternal(BANKACCOUNTID, value);
    }

    /**
     * Gets the attribute value for ReceiptMethodId, using the alias name ReceiptMethodId.
     * @return the ReceiptMethodId
     */
    public Number getReceiptMethodId() {
        return (Number)getAttributeInternal(RECEIPTMETHODID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptMethodId.
     * @param value value to set the ReceiptMethodId
     */
    public void setReceiptMethodId(Number value) {
        setAttributeInternal(RECEIPTMETHODID, value);
    }


    /**
     * Gets the attribute value for ReceiptStatus, using the alias name ReceiptStatus.
     * @return the ReceiptStatus
     */
    public String getReceiptStatus() {
        return (String)getAttributeInternal(RECEIPTSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptStatus.
     * @param value value to set the ReceiptStatus
     */
    public void setReceiptStatus(String value) {
        setAttributeInternal(RECEIPTSTATUS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param remittanceHeaderId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String remittanceHeaderId) {
        return new Key(new Object[]{remittanceHeaderId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
    
    protected oracle.jbo.domain.Number nextVal(String sequenceName) {
      SequenceImpl s = new SequenceImpl(sequenceName,getDBTransaction());
      return s.getSequenceNumber();
    }
    
    protected void doDML(int operation, TransactionEvent e) 
    {
        Map sessionScope = ADFContext.getCurrent().getSessionScope();
        String user = (String)sessionScope.get("user_id");
        System.out.println("User "+user);
        String respId = (String)sessionScope.get("resp_id");
        System.out.println("Resp Id "+respId);
        String orgId = (String)sessionScope.get("org_id");
        System.out.println("Org ID " + orgId);
        if(DML_UPDATE == operation)
        {
            try 
            {
                setLastUpdateDate(new Timestamp(System.currentTimeMillis()));
                setLastUpdatedBy(new oracle.jbo.domain.Number(user));
            } 
            catch (SQLException f) 
            {
                System.out.println(f.getMessage());
            }
        } 
        if (DML_INSERT == operation)
        {
            System.out.println("User "+user); 
            System.out.println("Resp Id "+respId); 
            System.out.println("Org ID " + orgId); 
            try 
            {
        //setSampleDocNo(new oracle.jbo.domain.Number(getSrNoString())); 
                setCreationDate(new Timestamp(System.currentTimeMillis()));
                setCreatedBy(new oracle.jbo.domain.Number(user)); //RespId 
                //setRespId(new oracle.jbo.domain.Number(respId)); 
                setOrgId(orgId);
            } 
            catch (SQLException f) {;} 
            }
        super.doDML(operation, e);
    }
}
